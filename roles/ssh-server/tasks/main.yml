---
- name: Ensure OpenSSH server is installed
  ansible.builtin.apt:
    name: openssh-server
    state: present
    update_cache: yes

- name: Create privilege separation directory
  ansible.builtin.file:
    path: /run/sshd
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Backup original SSH configuration if not already done
  ansible.builtin.copy:
    src: /etc/ssh/sshd_config
    dest: /etc/ssh/sshd_config.initial
    remote_src: yes
    force: no

- name: Configure SSH server
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - { regexp: '^#?PermitRootLogin.*', line: 'PermitRootLogin {{ ssh_permit_root_login }}' }
    - { regexp: '^#?MaxAuthTries.*', line: 'MaxAuthTries {{ ssh_max_auth_tries }}' }
    - { regexp: '^#?PubkeyAuthentication.*', line: 'PubkeyAuthentication {{ ssh_pubkey_authentication }}' }
    - { regexp: '^#?Port.*', line: 'Port {{ ssh_port }}' }
  notify: restart ssh

- name: Test SSH configuration
  ansible.builtin.command: sshd -t
  register: sshd_test
  changed_when: false
  failed_when: sshd_test.rc != 0

- name: Enable SSH service
  ansible.builtin.systemd:
    name: ssh
    enabled: yes
    state: started

- name: Enable UFW firewall
  community.general.ufw:
    state: enabled
    policy: deny

- name: Allow SSH connections through UFW
  community.general.ufw:
    rule: allow
    port: '{{ ssh_port }}'
    proto: tcp

- name: Reload UFW
  ansible.builtin.command: ufw reload
  changed_when: true
